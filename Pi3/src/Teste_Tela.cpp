
#include <Arduino.h>
#include <U8g2lib.h>

#ifdef U8X8_HAVE_HW_SPI
#include <SPI.h>
#endif
#ifdef U8X8_HAVE_HW_I2C
#include <Wire.h>
#endif

U8G2_ST7920_128X64_1_SW_SPI u8g2(U8G2_R0, 18, 19, 21, 22); // Enable, RW, RS, RESET
// 'image-removebg-preview', 128x64px
const unsigned char epd_bitmap_image_removebg_preview [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9f, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9e, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9e, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9c, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9c, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x98, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x98, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xd1, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x51, 0xfc, 0xff, 0xbb, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe6, 0xff, 0xff, 0xf3, 0xfb, 0xff, 
	0xff, 0x63, 0xfc, 0x7f, 0xbb, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe6, 0xff, 0xf7, 0xf3, 0xfb, 0xff, 
	0xff, 0x23, 0xfe, 0xff, 0x9b, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe6, 0xff, 0xf7, 0xf5, 0xff, 0xff, 
	0xff, 0x03, 0xfe, 0xff, 0x9b, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe6, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0x07, 0xff, 0xff, 0x93, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe6, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0x0f, 0x04, 0x81, 0x7f, 0x93, 0x19, 0xff, 0x85, 0x28, 0x79, 0x26, 0x62, 0x22, 0x11, 0x9a, 0xf1, 
	0x0f, 0x88, 0x80, 0x7f, 0x93, 0x10, 0xff, 0x85, 0x28, 0x70, 0x26, 0x22, 0x34, 0x11, 0x8a, 0xf1, 
	0x0f, 0x88, 0x80, 0x7f, 0x93, 0x52, 0xff, 0xa5, 0x2a, 0x72, 0xa6, 0xaa, 0xb4, 0x95, 0x2a, 0xf4, 
	0x0f, 0x04, 0x81, 0x7f, 0x93, 0x56, 0xff, 0xa5, 0xaa, 0x73, 0xa2, 0xea, 0xb5, 0x85, 0x6a, 0xf7, 
	0xff, 0x07, 0xff, 0x7f, 0x93, 0xd2, 0xff, 0xa5, 0x8a, 0x73, 0xa2, 0xfa, 0xb4, 0x85, 0xea, 0xf7, 
	0xff, 0x07, 0xfe, 0x7f, 0x93, 0xd0, 0xe7, 0xa5, 0x8a, 0x73, 0x23, 0xfa, 0xb4, 0x85, 0xea, 0xf3, 
	0xff, 0x23, 0xfe, 0x7f, 0xab, 0xdc, 0xe7, 0xa5, 0x9a, 0x71, 0xa1, 0x7b, 0xb4, 0x85, 0xea, 0xf1, 
	0xff, 0x63, 0xfc, 0x7f, 0xab, 0xde, 0xff, 0xa5, 0x9a, 0x70, 0xa1, 0x3b, 0xb4, 0x85, 0xea, 0xf5, 
	0xff, 0x51, 0xfc, 0x7f, 0xab, 0x5e, 0xff, 0xa5, 0x9a, 0x72, 0xa9, 0xab, 0xb5, 0x85, 0xea, 0xf4, 
	0xff, 0xd1, 0xfc, 0x7f, 0xab, 0x52, 0xff, 0xa5, 0x9a, 0x72, 0xa9, 0xaa, 0xb4, 0x95, 0x6a, 0xf4, 
	0xff, 0x98, 0xf8, 0x7f, 0xab, 0x50, 0xff, 0xa5, 0x9a, 0x70, 0xad, 0x2a, 0xb4, 0x95, 0x8a, 0xf0, 
	0xff, 0x98, 0xf8, 0x7f, 0xab, 0x19, 0xff, 0xa5, 0x98, 0x70, 0x2d, 0x22, 0xa4, 0x91, 0x8a, 0xf1, 
	0x7f, 0x9c, 0xf1, 0xff, 0xff, 0xb9, 0xff, 0xff, 0xfd, 0xfd, 0x7f, 0x77, 0xef, 0xfb, 0x9f, 0xfd, 
	0x7f, 0x9c, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9e, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9e, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x7f, 0x9e, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 1040)
const int epd_bitmap_allArray_LEN = 1;
const unsigned char* epd_bitmap_allArray[1] = {
	epd_bitmap_image_removebg_preview
};

void setup(void) {
  u8g2.begin();
  Serial.begin(115200);

}

void loop(void) {
  u8g2.setColorIndex(0); //inverte a cor 
  u8g2.firstPage();
   do{
     
     u8g2.drawXBMP(0,0,128,64,epd_bitmap_image_removebg_preview);
   }while(u8g2.nextPage());
}

